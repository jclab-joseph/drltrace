name: build and release

on:
  push: {}
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        config:
          - Debug
          - RelWithDebInfo
        platform:
          - Win32
          - x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update submodules
        run: |
          git submodule update --init --recursive

      - name: CMake Configure
        uses: threeal/cmake-action@v2.0.0
        with:
          run-build: false
          source-dir: drltrace_src
          build-dir: build
          args: "-A ${{ matrix.platform }}"
          options: |
            CMAKE_BUILD_TYPE=${{ matrix.config }}
            BUILD_TOOL_TESTS=ON
            CMAKE_CXX_FLAGS="/utf-8"
            CMAKE_C_FLAGS="/utf-8"

      - name: Build
        run: |
          cd build
          cmake --build . --config "${{ matrix.config }}"
        shell: cmd

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.config }}-${{ matrix.platform }}
          path: |
            build/bin*/
            build/dynamorio/logs/
            build/dynamorio/bin*/
            build/dynamorio/lib*/
            !build/dynamorio/libutil/

      - name: Run tests
        run: |
          ctest -VV
        shell: cmd

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Release version ${{ github.ref_name }}.
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload release artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/
          asset_name: build-${{ matrix.config }}-${{ matrix.platform }}.zip
          asset_content_type: application/zip
